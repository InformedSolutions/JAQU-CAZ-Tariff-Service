  ################################################### YAML Anchors ########################################################

  # Note that these are used when common environment variables are present in a step to reduce repetition - see terraform steps

global-variables:
  environment: &shared_terraform_credentials
    TF_VAR_access_key:
      from_secret: aws_access_key_id
    TF_VAR_secret_key:
      from_secret: aws_secret_access_key
    TF_VAR_account_id:
      from_secret: aws_account_id
    GIT_PRIVATE_SSH:
      from_secret: github_private_key

  ################################################# End YAML Anchors ########################################################



kind: pipeline
type: docker
name: tariffs-dev

trigger:
  branch:
    - develop
    - release/*
    - staging
    - master
  event:
    - pull_request
    - push
concurrency:
  limit: 1

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock

  - name: package_directory
    temp: {}

  - name: m2_repo
    temp: {}

services:
  - name: postgres
    image: postgres:11-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: caz-tariff
    ports:
      - 5432
  - name: localstack
    image: localstack/localstack
    environment:
      SERVICES: s3
    ports:
      - 4572

steps:

  ################################################### DEV/SIT Steps ########################################################

  # Clean agent images and containers to prevent disk space overuse
  - name: clean agent
    image: docker
    commands:
      - docker system prune -f
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

  # Build Docker Image for Running Maven
  - name: build docker maven base
    image: docker
    commands:
      - docker build -t maven-base -f ci-cd-resources/Dockerfile.ci.base .
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
    when:
      branch: 
        - develop
        - release/*

  # Unit test
  - name: unit test
    image: maven-base
    volumes:
      - name: package_directory
        path: /drone/src/target
      - name: m2_repo
        path: /root/.m2
    pull: never
    commands:
      - mvn test -P jacoco --no-transfer-progress
    environment:
      JAQU_NEXUS_URL:
        from_secret: nexus_url
      JAQU_NEXUS_USER:
        from_secret: nexus_username
      JAQU_NEXUS_PASSWORD:
        from_secret: nexus_password
    when:
      branch: 
        - develop
        - release/*

  # IT test
  - name: IT test
    image: maven-base
    volumes:
      - name: package_directory
        path: /drone/src/target
      - name: m2_repo
        path: /root/.m2
    pull: never
    environment:
      JAQU_NEXUS_URL:
        from_secret: nexus_url
      JAQU_NEXUS_USER:
        from_secret: nexus_username
      JAQU_NEXUS_PASSWORD:
        from_secret: nexus_password
      BUILD_ID: ${DRONE_BUILD_NUMBER}
      POSTGRES_URL: postgres:5432
      AWS_S3_URL: localstack:4572
    commands:
      - mvn verify -DskipUnitTests -P jacoco --no-transfer-progress
    when:
      branch: 
        - develop
        - release/*

  # Package
  - name: package deployable zip
    image: maven-base
    volumes:
      - name: package_directory
        path: /drone/src/target
      - name: m2_repo
        path: /root/.m2
    pull: never
    environment:
      BUILD_ID: ${DRONE_BUILD_NUMBER}
    commands:
      - mvn package -DskipUnitTests --no-transfer-progress
    when:
      branch: 
        - develop
        - release/*
        

  ################################################ End DEV/SIT Steps ########################################################





  ################################################ Dev Only Steps ############################################################

  # Scan with sonar
  - name: sonar scan
    image: maven-base
    volumes:
      - name: package_directory
        path: /drone/src/target
      - name: m2_repo
        path: /root/.m2
    environment:
      sonar_host:
        from_secret: sonar_host
      sonar_token:
        from_secret: sonar_token
    pull: never
    commands:
      - mvn sonar:sonar -Dsonar.host.url=$sonar_host
        -Dsonar.projectKey=${DRONE_REPO}
        -Dsonar.projectName=${DRONE_REPO}
        -Dsonar.login=$sonar_token
        -Dsonar.coverage.jacoco.xmlReportPaths=/drone/src/target/site/jacoco-aggregate/jacoco.xml
        -Dsonar.tests=src/test/java,src/it/java --no-transfer-progress
    environment:
      JAQU_NEXUS_URL:
        from_secret: nexus_url
      JAQU_NEXUS_USER:
        from_secret: nexus_username
      JAQU_NEXUS_PASSWORD:
        from_secret: nexus_password
    when:
      branch: 
        - develop
      event:
        exclude:
        - pull_request

  # Invoke terraform apply
  - name: deploy to dev
    image: hashicorp/terraform:0.12.3
    commands:
      - apk update && apk add bash
      - mkdir ~/.ssh
      - echo -n "$GIT_PRIVATE_SSH" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - touch ~/.ssh/known_hosts
      - chmod 600 ~/.ssh/known_hosts
      - ssh-keyscan -H github.com > /etc/ssh/ssh_known_hosts 2> /dev/null
      - git clone git@github.com:InformedSolutions/JAQU-CAZ-IAC.git
      - cd JAQU-CAZ-IAC
      - export TF_VAR_lambda_file=$(ls /opt/package/*.zip | tail -1)
      - cd terraform/projects/tariffs/layers/00.global
      - PATH=$PATH:../../../../bin/
      - chmod +x ../../../../bin/tf
      - tf init
      - tf workspace select default
      - tf apply -auto-approve
      - cd ../01.networking
      - tf init
      - tf workspace select dev
      - tf apply -auto-approve
      - cd ../02.backends
      - tf init
      - tf workspace select dev
      - tf apply -auto-approve
      - cd ../03.api
      - tf init
      - tf workspace select dev
      - tf apply -auto-approve
    environment:
      <<: *shared_terraform_credentials
    volumes:
      - name: package_directory
        path: /opt/package
    when:
      event:
        exclude:
          - pull_request
      branch: develop

  ################################################ End Dev Only Steps ############################################################




  #################################################### Secrets #####################################################################
  

# Note the below values are pulled from AWS Secrets Manager via the aws-secrets Drone plugin
---
kind: secret
name: aws_access_key_id
get:
  path: /secret/drone.global
  name: awsAccessKeyId
  
---
kind: secret
name: aws_secret_access_key
get:
  path: /secret/drone.global
  name: awsSecretAccessKey
  
---
kind: secret
name: sonar_host
get:
  path: /secret/drone.global
  name: sonarHost
  
---
kind: secret
name: sonar_token
get:
  path: /secret/drone.global
  name: sonarToken

---
kind: secret
name: github_private_key
get:
  path: /secret/drone.global
  name: githubPrivateKey

---
kind: secret
name: nexus_url
get:
  path: /secret/drone.global
  name: nexusUrl

---
kind: secret
name: nexus_username
get:
  path: /secret/drone.global
  name: nexusUsername

---
kind: secret
name: nexus_password
get:
  path: /secret/drone.global
  name: nexusPassword
  
---
kind: secret
name: db_password
get:
  path: /secret/tariffs.dev/db-password

  ################################################ End Secrets #########################################################